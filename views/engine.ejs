<html>
<head>
  <meta charset="UTF-8">
  <title><%= work.title %></title>
  <meta name="viewport" id="viewport" content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no">
  <meta content="telephone=no" name="format-detection">
  <meta content="email=no" name="format-detection">
  <script src="/third-libs/vue.js"></script>
  <link rel="stylesheet" href="/third-libs/animate.min.css">
  <link rel="stylesheet" href="/third-libs/swiper.min.css">
  <script src="/third-libs/swiper.min.js"></script>
  <script src="/third-libs/swiper-animation.umd.min.js"></script>
  <!-- <script src="/third-libs/vue-router.js"></script> -->
  <script>window.__work = <%- JSON.stringify(work) %></script>
  <script src="/engine-assets/engine.umd.js"></script>

  <style>
    * {
      outline: none;
    }

    .preview-wrapper {
      display: flex;
      flex-wrap: nowrap;
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      margin: auto;
    }
    .preview-wrapper .course-wrapper {
      position: absolute;
      width: 100%;
      height: 100%;
      display: inline-block;
      background-color: transparent;
      box-sizing: content-box;
    }

    .preview-wrapper .float-shortcuts {
      position: fixed;
      z-index: 999;
      bottom: 28px;
      right: 20px;
      width: 200px;
      height: 70px;
      display: flex;
    }

    .preview-wrapper .float-shortcuts .float-shortcuts-btn {
      flex: 1;
    }

    .preview-wrapper .float-shortcuts .page-controller {
      width: 76px;
      height: 62px;
    }
  </style>
</head>
<body>
  <div id="app">
    <div class="preview-wrapper">
      <div class="course-wrapper">
        <div class="float-shortcuts">
          <div class="float-shortcuts-btn">
            <img src="/third-libs/slid-left.png" class="page-controller swiper-button-prev" />
          </div>
          <div class="float-shortcuts-btn">
            <img src="/third-libs/slid-right.png" class="page-controller swiper-button-next" />
          </div>
        </div>
        <engine />
      </div>
    </div>
  </div>

  <script>
    // Vue.component('engine', window.Engine)
    new Vue({
      el: '#app',
      // router: new VueRouter({ routes: [{ path: '/foo', component: { template: '<div>foo</div>' } }] }),
      // router: new VueRouter({ routes: [] }),
      data: {},
      created() {},
      mounted() {
        // const routes = window.getRoutes()
        // console.log(routes, 22)
        // this.$router.addRoutes(routes)
        // console.log(new VueRouter({ routes }))
      },
      methods: {},
    })

  </script>
  <script>
    var swiperAnimation = new SwiperAnimation();

    var mySwiper = new Swiper('.swiper-container', {
      touchRatio: 0,
      // Optional parameters
      direction: 'horizontal',
      loop: false,
      // If we need pagination
      pagination: {
        // el: '.swiper-pagination',
        el: null
      },
      // Navigation arrows
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
      },
      paginationClickable: false,
      // And if we need scrollbar
      // scrollbar: {
      //   el: '.swiper-scrollbar',
      // },
      on: {
        init: function () {
          swiperAnimation.init(this).animate();
        },
        slideChange: function () {
          // window.swiperPageInit(this.activeIndex)

          swiperAnimation.init(this).animate();
        },
      }
    });

    function title(str) {
      if (str.length <= 1) return str.toUpperCase()
      return str.slice(0,1).toUpperCase() + str.slice(1)
    }

    function displayMessage ({ origin, data }) {
      console.log(origin, data, 111)
      if (['next', 'prev'].includes(data)  && origin === window.location.origin) {
        // 不采用下面的原因：在移动端和小屏幕上，会移除：.swiper-button-prev, .swiper-button-next 按钮
        // document.querySelector(`.swiper-button-${data}`).click()

        var action = `slide${title(data)}`
        mySwiper[action]()
      }
    }

    if (window.addEventListener) {
      window.addEventListener("message", displayMessage, false);
    } else {
      window.attachEvent("onmessage", displayMessage);
    }
  </script>
  <!-- build:js scripts/vendor.js -->
  <!-- endbuild -->
</body>
</html>
